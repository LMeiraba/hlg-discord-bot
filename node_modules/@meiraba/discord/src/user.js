const axios = require("axios")
const mime = require('mime-kind')
const base_url = "https://discord.com/api"

class user {
    constructor({token}) {
        this.token = token
    }
    me = {
        info: async() => {
            return (await axios({
                method: "get",
                url: base_url+"/users/@me",
                headers: {
                    Authorization: `Bot ${this.token}`
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        update: async({username,avatar}) => {
            return (await axios({
                method: "patch",
                url: base_url+"/users/@me",
                headers: {
                    'content-type': 'application/json',
                    Authorization: `Bot ${this.token}`
                },
                data: JSON.stringify({
                    username: username ?? null,
                    avatar: avatar ? `data:${(await mime(avatar)).mime};base64,${avatar.toString('base64')}`: null
                })
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        guilds: async({before,after,limit}) => {
            let par = {}
            before ? par.before = before : null
            after ? par.after = after : null
            limit ? par.limit = limit : null
            return (await axios({
                method:'get',
                url: base_url+`/users/@me/guilds`,
                headers: {
                    'content-type': `application/json`,
                    Authorization: `Bot ${this.token}`
                },
                params: par
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        guild_leave: async({guild_id}) => {
            return (await axios({
                method:'delete',
                url: base_url+`/users/@me/guilds/${guild_id}`,
                headers: {
                    Authorization: `Bot ${this.token}`
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.status
        },
        create_dm: async({recipient_id}) => {
            return (await axios({
                method: 'post',
                url: base_url+`/users/@me/channels`,
                headers: {
                    Authorization: `Bot ${this.token}`,
                    'content-type': `application/json`
                },
                data: {
                    recipient_id: recipient_id
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        application: async() => {
            return (await axios({
                method: 'get',
                url: base_url+'/oauth2/applications/@me',
                headers: {
                    Authorization: `Bot ${this.token}`
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        }
    }
    get = async({user_id}) => {
        return (await axios({
            method: 'get',
            url: base_url+`/users/${user_id}`,
            headers: {
                Authorization: `Bot ${this.token}`
            }
        }).catch(function (error) {
            if (error.response) {
              throw new Error (JSON.stringify({
                statusCode: error.response.status,
                data: error.response.data
              },null,4))
            } else {
              throw new Error("Opse something unknown happened! :(")
            }
          }))?.data
    }
    OAuth = {
        guilds: async({access_token,before,after,limit}) => {
            let par = {}
            before ? par.before = before : null
            after ? par.after = after : null
            limit ? par.limit = limit : null
            return (await axios({
                method:'get',
                url: base_url+`/users/@me/guilds`,
                headers: {
                    'content-type': `application/json`,
                    Authorization: `Bearer ${access_token}`
                },
                params: par
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        guild_member: async({access_token,guild_id}) => {
            return (await axios({
                method: 'get',
                url: base_url+`/users/@me/guilds/${guild_id}/member`,
                headers: {
                    Authorization: `Bearer ${access_token}`
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        info: async({access_token}) => {
            return (await axios({
                method: "get",
                url: base_url+"/users/@me",
                headers: {
                    Authorization: `Bearer ${access_token}`
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        },
        connections: async({access_token}) => {
            return (await axios({
                method: "get",
                url: base_url+"/users/@me/connections",
                headers: {
                    Authorization: `Bearer ${access_token}`
                }
            })).data 
        },
        guild_join: async ({access_token,guild_id,user_id,nick,roles,mute,deaf}) => {
            return (await axios({
                method: 'put',
                url: base_url+`/guilds/${guild_id}/members/${user_id}`,
                headers: {
                    Authorization: `Bot ${this.token}`,
                    'content-type': `application/json`
                },
                data: JSON.stringify({
                    access_token: access_token,
                    nick: nick || null,
                    roles: roles || null,
                    mute: mute || null,
                    deaf: deaf || null
                })
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.status
        },
        create_gdm: async({token,access_token}) => {
            return (await axios({
                method: 'post',
                url: base_url+`/users/@me/channels`,
                headers: {
                    Authorization: `Bot ${token}`,
                    'content-type': `application/json`
                },
                data: {
                    access_token: access_token,
                    //nicks: {id:"nickname"}
                }
            }).catch(function (error) {
                if (error.response) {
                  throw new Error (JSON.stringify({
                    statusCode: error.response.status,
                    data: error.response.data
                  },null,4))
                } else {
                  throw new Error("Opse something unknown happened! :(")
                }
              }))?.data
        }
    }
}

module.exports = user
